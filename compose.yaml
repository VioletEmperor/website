services:
  website:
    depends_on:
      - database
    build:
      context: ./
    develop:
      watch:
        - action: rebuild
          path: .
          target: .
          ignore:
            - go.mod
    container_name: website
    hostname: website
    environment:
      - DB_HOST=${DB_HOST:?database host not set}
      - DB_NAME=${DB_NAME:?database name not set}
      - DB_USER=${DB_USER:?database user not set}
      - DB_PASSWORD=${DB_PASSWORD:?database password not set}
      - EMAIL_KEY=${EMAIL_KEY:?email key not set}
      - PROJECT_ID=${PROJECT_ID:?project id not set}
      - FIREBASE_WEB_API_KEY=${FIREBASE_WEB_API_KEY:?firebase web api key not set}
      - TURNSTILE_SECRET=${TURNSTILE_SECRET:?turnstile secret not set}
      - GOOGLE_APPLICATION_CREDENTIALS=/root/.config/gcloud/application_default_credentials.json
      - PORT=${PORT:?port not set}
    networks:
      - mynet
    ports:
      - "80:80"
    volumes:
      # Mount gcloud credentials for Firebase Auth
      - ~/.config/gcloud:/root/.config/gcloud:ro
      # Mount posts directory for blog content
      - ./posts:/app/posts:rw
    deploy:
      restart_policy:
        condition: on-failure
  database:
    environment:
      - POSTGRES_USER=${DB_USER:?database password not set}
      - POSTGRES_PASSWORD=${DB_PASSWORD:?database password not set}
      - POSTGRES_DB=${DB_NAME:?database password not set}
    build:
      context: ./database
    container_name: database
    hostname: database
    networks:
      - mynet
    ports:
      - "5432:5432"
    expose:
      - "5432"
    volumes:
      - volume:/var/lib/postgresql/data

networks:
  mynet:
    driver: bridge

volumes:
  volume:
